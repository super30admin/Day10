#S.C = O(n*m) T.C = O(1)
class Solution(object):
    def spiralOrder(self, matrix):
        """
        :type matrix: List[List[int]]
        :rtype: List[int]
        """
        n = len(matrix)
        m = len(matrix[0])

        result = []
        top = 0;bottom=n-1;right = m-1;left=0

        while(top<=bottom and left<=right):
            if(top<=bottom and left<=right):
                for i in range (left,right+1):
                    result.append(matrix[top][i])
                top+=1
            if(top<=bottom and left<=right):
                for i in range(top,bottom+1):
                    result.append(matrix[i][right])
                right-=1
            if(top<=bottom and left<=right):
                for i in range(right, left - 1, -1):
                    result.append(matrix[bottom][i])
                bottom-=1
            if(top<=bottom and left<=right):
                for i in range(bottom, top - 1, -1):
                    result.append(matrix[i][left])
                left+=1

        return result